{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nfunction useWebSocket(url) {\n  _s();\n  const [data, setData] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const ws = new WebSocket(url);\n    ws.onopen = () => {\n      setIsConnected(true);\n    };\n    ws.onmessage = event => {\n      try {\n        const message = JSON.parse(event.data);\n        setData(message);\n      } catch (error) {\n        console.error('WebSocket message parse error:', error);\n      }\n    };\n    ws.onclose = () => {\n      setIsConnected(false);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      ws.close();\n    };\n  }, [url]);\n  return {\n    data,\n    isConnected\n  };\n}\n_s(useWebSocket, \"p/j72S2hcfL/Esw/r8P+ucilcbY=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useState","useWebSocket","url","_s","data","setData","isConnected","setIsConnected","ws","WebSocket","onopen","onmessage","event","message","JSON","parse","error","console","onclose","onerror","close"],"sources":["C:/MyProjects/TraderPro/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction useWebSocket(url) {\n  const [data, setData] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    const ws = new WebSocket(url);\n\n    ws.onopen = () => {\n      setIsConnected(true);\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const message = JSON.parse(event.data);\n        setData(message);\n      } catch (error) {\n        console.error('WebSocket message parse error:', error);\n      }\n    };\n\n    ws.onclose = () => {\n      setIsConnected(false);\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [url]);\n\n  return { data, isConnected };\n}\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,YAAYA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMS,EAAE,GAAG,IAAIC,SAAS,CAACP,GAAG,CAAC;IAE7BM,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBH,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAEDC,EAAE,CAACG,SAAS,GAAIC,KAAK,IAAK;MACxB,IAAI;QACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACR,IAAI,CAAC;QACtCC,OAAO,CAACQ,OAAO,CAAC;MAClB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDR,EAAE,CAACU,OAAO,GAAG,MAAM;MACjBX,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDC,EAAE,CAACW,OAAO,GAAIH,KAAK,IAAK;MACtBC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAED,OAAO,MAAM;MACXR,EAAE,CAACY,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,CAAClB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE;EAAY,CAAC;AAC9B;AAACH,EAAA,CAlCQF,YAAY;AAoCrB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}