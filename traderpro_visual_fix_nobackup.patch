--- a/src/styles/GlobalStyles.css
+++ b/src/styles/GlobalStyles.css
@@ -51,7 +51,16 @@
      --modal-padding: 1.5rem;
      --modal-border-radius: 0.75rem;
      --top-bar-height: 0px; /* Dynamic from App.js */
-   }
+
+  /* Added by PR: extra palette + fallbacks */
+  --bg-slate-700: #334155;
+  --bg-slate-800: #1f2937;
+  --bg-slate-700-50: rgba(51,65,85,0.5);
+  --bg-slate-800-60: rgba(31,41,55,0.6);
+  --text-amber-400: #fbbf24;
+
+  }
+
 
    body {
      font-family: var(--font-family);
@@ -77,4 +86,15 @@
      padding: var(--spacing-xl);
      flex: 1;
      width: 100%;
-   }+   }
+
+/* Focus-visible defaults */
+:where(button, [role="button"], a, input, select, textarea, [tabindex])\:focus-visible,
+button:focus-visible, a:focus-visible, [role="button"]:focus-visible,
+input:focus-visible, select:focus-visible, textarea:focus-visible {
+  outline: 2px solid var(--bg-button-primary);
+  outline-offset: 2px;
+}
+
+/* RTL support */
+html[dir="rtl"] body { direction: rtl; }
--- a/src/components/Sidebar.module.css
+++ b/src/components/Sidebar.module.css
@@ -1,16 +1,16 @@
 .sidebar {
-     position: absolute;
-     top: 0;
+     position: sticky;
+     top: calc(var(--top-bar-height, 64px));
      left: 0;
      width: 16rem;
-     background-color: var(--bg-slate-800/60);
+     background-color: var(--bg-slate-800-60);
      backdrop-filter: blur(4px);
      padding: var(--spacing-xs);
      display: flex;
      flex-direction: column;
      gap: var(--spacing-xs);
      z-index: 40;
-     height: calc(100vh - var(--top-bar-height));
+     height: calc(100vh - var(--top-bar-height, 64px));
      overflow-y: auto;
    }
 
--- a/src/components/StatusBar.module.css
+++ b/src/components/StatusBar.module.css
@@ -9,7 +9,7 @@
      z-index: 50;
      border-bottom: var(--table-border-width) solid var(--border-primary);
      height: 5rem;
-     overflow: hidden;
+     overflow: visible;
    }
 
    .logo {
@@ -79,4 +79,8 @@
    .vixValue {
      font-weight: var(--font-weight-semibold);
      color: var(--text-amber-400);
-   }+   }
+
+@media (max-width: 768px) {
+  .statusItems { flex-wrap: wrap; row-gap: var(--spacing-sm); }
+}
--- a/src/components/Dashboard.module.css
+++ b/src/components/Dashboard.module.css
@@ -74,7 +74,7 @@
    }
 
    .table tr:hover {
-     background-color: var(--bg-slate-700/50);
+     background-color: var(--bg-slate-700-50);
    }
 
    .tag {
@@ -98,11 +98,21 @@
      top: 0;
      left: 0;
      width: 16rem;
-     background-color: var(--bg-slate-800/60);
+     background-color: var(--bg-slate-800-60);
      backdrop-filter: blur(4px);
      padding: var(--spacing-xl);
      border-right: var(--table-border-width) solid var(--border-primary);
      display: flex;
      flex-direction: column;
      gap: var(--spacing-md);
-   }+   }
+
+/* Sticky header and zebra rows */
+.table thead th { position: sticky; top: 0; background: var(--bg-card-opaque); z-index: 1; }
+.table tbody tr:nth-child(odd) { background: rgba(255,255,255,0.02); }
+.table td:nth-child(1), .table td:nth-child(2) { white-space: nowrap; }
+
+/* Tag contrast improvements (if such classes exist) */
+.tag-stock { background-color: rgba(20,83,45,.35); color: #22c55e; }
+.tag-error { background-color: rgba(127,29,29,.35); color: #f87171; }
+.tag-info  { background-color: rgba(30,58,138,.35); color: #60a5fa; }
--- a/src/App.js
+++ b/src/App.js
@@ -15,13 +15,21 @@
      const topBarRef = useRef(null);
 
      useEffect(() => {
-       if (topBarRef.current) {
-         const height = topBarRef.current.offsetHeight;
-         document.documentElement.style.setProperty('--top-bar-height', `${height}px`);
-       }
-     }, [activeTab, activeSubTab]);
-
-     const handleTabChange = (tab) => {
+  if (!topBarRef.current) return;
+  const setHeight = () => {
+    const h = topBarRef.current.getBoundingClientRect().height || 64;
+    document.documentElement.style.setProperty('--top-bar-height', `${h}px`);
+  };
+  setHeight();
+  window.addEventListener('resize', setHeight);
+  const ro = new ResizeObserver(setHeight);
+  ro.observe(topBarRef.current);
+  return () => {
+    window.removeEventListener('resize', setHeight);
+    ro.disconnect();
+  };
+}, [activeTab, activeSubTab]);
+const handleTabChange = (tab) => {
        setActiveTab(tab);
        setActiveSubTab(null);
      };
